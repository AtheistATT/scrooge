from os import name
import re
from datetime import datetime
from rich.console import Console
from rich.panel import Panel
from rich.table import Table

console = Console()
console.clear()

console.print(Panel.fit("üí∞ [bold green]–°–∫—Ä—É–¥–∂[/bold green] üí∞\n–î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à–∏ —Ä–∞—Å—Ö–æ–¥—ã.", title="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!"))

console.print("–í–≤–æ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–∫—É–ø–∫–∞—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ: [bold blue]<–Ω–∞–∑–≤–∞–Ω–∏–µ>:<—Å—É–º–º–∞>:<–∫–∞—Ç–µ–≥–æ—Ä–∏—è>[/bold blue]")
console.print("–í—ã –º–æ–∂–µ—Ç–µ –≤–≤–æ–¥–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç–∞—Ç–µ–π —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ —Ä–∞–∑. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ —Ä–∞–∑–¥–µ–ª—è–π—Ç–µ –∏–∑ –∑–∞–ø—è—Ç—ã–º–∏ ',' ")
console.print("–ù–∞–ø—Ä–∏–º–µ—Ä:'[bold blue] –∫–æ—Ñ–µ:50:–ï–¥–∞, –æ–±–µ–¥:120:–ï–¥–∞, –∫–Ω–∏–≥–∞:300:–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è, —Ç–∞–∫—Å–∏:100:–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç[/bold blue]'", emoji=False)

console.rule("[yellow]–ù–∞—á–Ω–µ–º[/yellow]")

input_strings = []

def check_purch(purch):
    patt = re.compile(r"^[^:]+:\d+(\.\d+)?:[^:]+$")
    return True if patt.match(purch) else False

while True:
    #    break # –î–õ–Ø –¢–ï–°–¢–ê –í –†–ï–õ–ò–ó–ï –ó–ê–ö–û–ú–ï–ù–¢–ò–¢–¨!!!
    console.print("–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ\n–ß—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å –≤–≤–æ–¥ –Ω–∞–±–µ—Ä–∏—Ç–µ '[red]—Å—Ç–æ–ø[/red]'\n[green]>>>[green]", end='')
    user_input = input().lower()
    user_input = user_input.replace(' ', '')

    if user_input == '—Å—Ç–æ–ø':
        console.print("–í–≤–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω üëç")
        break
    for x in user_input.split(','):
        if check_purch(x):
            input_strings.append(x)
            console.print(f"–ü–æ–∫—É–ø–∫–∞ [green]{x}[/green] –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞. ‚úÖ")
        else:
            console.print(f"–ü–æ–∫—É–ø–∫–∞ [red]{x}[/red] –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏ –Ω–µ –≤–∫–ª—é—á–µ–Ω–∞ –≤ —Å–ø–∏—Å–æ–∫. ‚ùå")
    
    console.print(f"–í—Å–µ–≥–æ –≤ —Å–ø–∏—Å–∫–µ: [green]{len(input_strings)}[/green]\n")

#input_strings = "–∫–æ—Ñ–µ:50:–ï–¥–∞,–æ–±–µ–¥:120:–ï–¥–∞,–∫–Ω–∏–≥–∞:300:–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è,—Ç–∞–∫—Å–∏:100:–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç,–∫–∏–Ω–æ:400:–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è,—à–∞—É—Ä–º–∞:80:–ï–¥–∞,–∞–≤—Ç–æ–±—É—Å:60:–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç,—á–∞–π:30:–ï–¥–∞,–ø–æ–¥–∞—Ä–æ–∫:500:–ü–æ–¥–∞—Ä–∫–∏,–±–µ–Ω–∑–∏–Ω:2000:–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç,–º–æ—Ä–æ–∂–µ–Ω–æ–µ:70:–ï–¥–∞,–±–∏–ª–µ—Ç—ã:600:–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è,—É–∂–∏–Ω:250:–ï–¥–∞,–∫–æ—Ñ–µ:60:–ï–¥–∞,–ø–∏—Ü—Ü–∞:300:–ï–¥–∞,–º–µ—Ç—Ä–æ:40:–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç,–∫–æ–Ω—Ü–µ—Ä—Ç:800:–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è,—Å–æ–∫:20:–ï–¥–∞,—Ü–≤–µ—Ç—ã:200:–ü–æ–¥–∞—Ä–∫–∏,–±–µ–Ω–∑–∏–Ω:1500:–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç,–∑–∞–≤—Ç—Ä–∞–∫:90:–ï–¥–∞,—Ç–∞–∫—Å–∏:200:–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç,–∫–Ω–∏–≥–∞:150:–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è,–æ–±–µ–¥:180:–ï–¥–∞,–∫–æ—Ñ–µ:40:–ï–¥–∞,–ø–∞—Ä–∫–æ–≤–∫–∞:50:–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç,—É–∂–∏–Ω:300:–ï–¥–∞,–±–∏–ª–µ—Ç—ã:700:–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è,–ø–æ–¥–∞—Ä–æ–∫:1000:–ü–æ–¥–∞—Ä–∫–∏,–±–µ–Ω–∑–∏–Ω:2500:–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç,–º–æ—Ä–æ–∂–µ–Ω–æ–µ:50:–ï–¥–∞,—Ç–∞–∫—Å–∏:120:–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç,–∫–Ω–∏–≥–∞:250:–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è,–æ–±–µ–¥:200:–ï–¥–∞,–∫–æ—Ñ–µ:30:–ï–¥–∞,–∞–≤—Ç–æ–±—É—Å:70:–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç,—á–∞–π:25:–ï–¥–∞,–ø–æ–¥–∞—Ä–æ–∫:300:–ü–æ–¥–∞—Ä–∫–∏,–±–µ–Ω–∑–∏–Ω:1800:–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç".lower().split(',') # –°–¢–†–û–ö–ê –î–õ–Ø –¢–ï–°–¢–ê –í –†–ï–õ–ò–ó–ï –ó–ê–ö–û–ú–ï–ù–¢–ò–¢–¨!!!

categ_dict = {}

for purch in input_strings:
    
    name, cost, categ = purch.split(':')
    cost = float(cost)
    
    if categ not in categ_dict:
        categ_dict[categ] = []
    
    categ_dict[categ].append((name, cost))

total_cat = [(cat, sum(cost for _, cost in items)) for cat, items in categ_dict.items()]# –û–±—â–∞—è —Å—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤
aver_cat = [(cat, sum(cost for _, cost in items) / len(items)) for cat, items in categ_dict.items()] # –°—Ä–µ–¥–Ω—è—è —Å—É–º–º–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
count_cat = [(cat, len(items)) for cat, items in categ_dict.items()] # –°—Ä–µ–¥–Ω—è—è —Å—É–º–º–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
purch_cat = [(cat, " ".join(name for name, _ in items), len(items))for cat, items in categ_dict.items()]# –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º 


console.rule("[green]–û—Ç—á–µ—Ç[/green]")

console.print(f"[bold blue]–û–±—â–∏–π –æ—Ç—á–µ—Ç –ø–æ —Ä–∞—Å—Ö–æ–¥–∞–º.[/bold blue]")

total_all = sum([x[1] for x in count_cat])
total_cost = sum([x[1] for x in total_cat])
total_aver = total_cost/total_all

console.print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫: {total_all}")
console.print(f"–û–±—â–∞—è —Å—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤: {total_cost}")
console.print(f"–°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤: {total_aver:8.2f}")

table = Table(title=f"–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º") 

table.add_column("–ö–∞—Ç–µ–≥–æ—Ä–∏—è")
table.add_column("–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫")
table.add_column("–°—É–º–º–∞—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å")
table.add_column("–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞")
table.add_column("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫")

for i in range(len(total_cat)):
    table.add_row(total_cat[i][0], purch_cat[i][1], str(total_cat[i][1]), str(round(aver_cat[i][1], 2)), str(count_cat[i][1]))

console.print(table)

console.print(f"–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω [green]{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}[/green]")
console.print("–î–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ Enter ‚èé")
input()
